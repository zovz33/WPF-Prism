<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <ResourceDictionary.MergedDictionaries> 
        <ResourceDictionary Source="Generic.xaml" />
 
            <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Window.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="WindowDialogStyle" TargetType="Window">
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="AllowsTransparency" Value="True"/> 
        <Setter Property="ResizeMode" Value="NoResize"/> 
        <Setter Property="Focusable" Value="False" /> 
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ShowInTaskbar" Value="False"/>
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SizeToContent" Value="Manual"/> 
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}">
                        <AdornerDecorator> 
                            <Grid>
                                <ContentPresenter />
                            </Grid> 
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter> 
    </Style>

    <Style x:Key="StyleDialog" TargetType="{x:Type UserControl}" BasedOn="{StaticResource {x:Type UserControl}}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource CardColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="TextElement.FontWeight" Value="Regular" />
        <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Border.CornerRadius" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserControl}">
                    <AdornerDecorator>
                        <Border 
                            Margin="0" Focusable="False"
                            Background="{DynamicResource DialogBackgroundColor}"
                            Padding="0" BorderBrush="Black" BorderThickness="1"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            CornerRadius="10" 
                            Opacity="1">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="20"
                                    Direction="0"
                                    Opacity="0.4"
                                    ShadowDepth="0"
                                    Color="#202020" />
                            </Border.Effect>
                            <Grid>
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0"/>
                            </Grid>
                        </Border>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="YesNoDialog" TargetType="{x:Type UserControl}" BasedOn="{StaticResource StyleDialog}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserControl}">
                    <AdornerDecorator>
                        <Border 
                            Margin="0" Focusable="False"
                            Background="{DynamicResource DialogBackgroundColor}"
                            Padding="0" BorderBrush="Black" BorderThickness="1"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            CornerRadius="10" 
                            Opacity="1">
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="20"
                                    Direction="0"
                                    Opacity="0.4"
                                    ShadowDepth="0"
                                    Color="#202020" />
                            </Border.Effect>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/> 
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0"/>
                                </Grid>
                            <Grid Grid.Row="1" Margin="0 5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                    <Button Style="{DynamicResource YesButton}"/>
                                    <Button Style="{DynamicResource NoButton}" />
                                </Grid>
                            </Grid>
                        </Border>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconDialog" TargetType="{x:Type Control}" BasedOn="{StaticResource ControlBase}">
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Margin" Value="10 0 0 0" />
        <Setter Property="Foreground" Value="Azure" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" /> 
    </Style>

    <Style x:Key="TitleDialogStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="Text" Value="{Binding Message}"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Margin" Value="5 0" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="TextBoxDialog" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignOutlinedTextBox}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="Margin" Value="25 10" /> 
        <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
        <Setter Property="Width" Value="250"/> 
        <Setter Property="Text" Value="{Binding EditValueText}"/>
        <Setter Property="materialDesign:HintAssist.Hint" Value="{Binding EditNameHint}"/>
        <Setter Property="materialDesign:HintAssist.HelperText" Value="{Binding EditErrorMessage}" />
        <Setter Property="materialDesign:ValidationAssist.HasError" Value="{Binding HasError}" /> 
    </Style> 
    
    <Style x:Key="YesButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="28" /> 
        <Setter Property="Background" Value="#5cb85c" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Command" Value="{Binding CloseDialogCommand}" />
        <Setter Property="CommandParameter" Value="True" />
        <Setter Property="Content" Value="Да" />
        <Setter Property="Grid.Row" Value="1" />
        <Setter Property="Grid.Column" Value="0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#5cb85c"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="materialDesign:RippleAssist.Feedback" Value="DarkGreen"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NoButton" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Width" Value="64" />
        <Setter Property="Height" Value="28" /> 
        <Setter Property="Background" Value="#d9534f" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Command" Value="{Binding CloseDialogCommand}" />
        <Setter Property="CommandParameter" Value="False" />
        <Setter Property="Content" Value="Нет" />
        <Setter Property="Grid.Row" Value="1" />
        <Setter Property="Grid.Column" Value="1" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#d9534f"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="materialDesign:RippleAssist.Feedback" Value="DarkRed"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>